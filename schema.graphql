type Approval @entity {
  id: ID!
  owner: Bytes! # address
  approved: Bytes! # address
  tokenId: BigInt! # uint256
}

type ApprovalForAll @entity {
  id: ID!
  owner: Bytes! # address
  operator: Bytes! # address
  approved: Boolean! # bool
}

type BaseURIUpdated @entity {
  id: ID!
  baseURI: String! # string
}

type Minted @entity {
  id: ID!
  creator: Bytes! # address
  tokenId: BigInt! # uint256
  indexedTokenIPFSPath: String! # string
  tokenIPFSPath: String! # string
}

type NFTCreatorMigrated @entity {
  id: ID!
  tokenId: BigInt! # uint256
  originalAddress: Bytes! # address
  newAddress: Bytes! # address
}

type NFTMarketUpdated @entity {
  id: ID!
  nftMarket: Bytes! # address
}

type NFTMetadataUpdated @entity {
  id: ID!
  name: String! # string
  symbol: String! # string
  baseURI: String! # string
}

type NFTOwnerMigrated @entity {
  id: ID!
  tokenId: BigInt! # uint256
  originalAddress: Bytes! # address
  newAddress: Bytes! # address
}

type PaymentAddressMigrated @entity {
  id: ID!
  tokenId: BigInt! # uint256
  originalAddress: Bytes! # address
  newAddress: Bytes! # address
  originalPaymentAddress: Bytes! # address
  newPaymentAddress: Bytes! # address
}

type ProxyCallContractUpdated @entity {
  id: ID!
  proxyCallContract: Bytes! # address
}

type TokenCreatorPaymentAddressSet @entity {
  id: ID!
  fromPaymentAddress: Bytes! # address
  toPaymentAddress: Bytes! # address
  tokenId: BigInt! # uint256
}

type TokenCreatorUpdated @entity {
  id: ID!
  fromCreator: Bytes! # address
  toCreator: Bytes! # address
  tokenId: BigInt! # uint256
}

type TokenIPFSPathUpdated @entity {
  id: ID!
  tokenId: BigInt! # uint256
  indexedTokenIPFSPath: String! # string
  tokenIPFSPath: String! # string
}

type Transfer @entity {
  id: ID!
  from: Bytes! # address
  to: Bytes! # address
  tokenId: BigInt! # uint256
}
